
Steps to create maven project


Open Eclipse -- go to file menu 

	new-- maven project
		select locataion -- next
	than select Select an Archetype -- webapp--next

	Select Group id (basically it's should be yor org. name)
	ArtifactId (it'll your project name)
	next & finish


Now go to pom.xml


	add dependency for java web (javaee)

<!-- https://mvnrepository.com/artifact/javax/javaee-web-api -->
<dependency>
    <groupId>javax</groupId>
    <artifactId>javaee-web-api</artifactId>
    <version>7.0</version>
</dependency>
	

Save and build now jsp error will solved

---------------------------------------------

update web xml file (upgrade it)

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
		 http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
         
  <display-name>Archetype Created Web Application</display-name>
</web-app>

-------------------------------------------------	


	Update JDK version

<build>
  
   <plugins>
        <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                   <source>1.8</source>
                   <target>1.8</target>
                </configuration>
        </plugin>
    </plugins>
</build>

after Adding in pom.xml than goto your eclipse workspace –goto your project directory settings --org.eclipse.wst.common.project.facet.core.xml edit it
  <installed facet="java" version="1.8"/>
  <installed facet="jst.web" version="3.1"/>

---------------------------


changes into web.xml for spring controller that all request pass through the spring controller

<servlet>
<servlet-name>spring-dispatcher</servlet-name>
<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
</servlet>
<servlet-mapping>
<servlet-name>spring-dispatccher</servlet-name>
<url-pattern>/</url-pattern>
</servlet-mapping>

----------------------------------------

	create spring-dispatcher-servlet.xml file in WEB-INF folder


<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd">


	<bean id="HandlerMapping"
		class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- this tag is help to execute annotations -->
	<mvc:annotation-driven />

</beans>


---------------------

and provide the base package name in <context attribute 


	add the spring dependecy in pom.xml
<!-- https://mvnrepository.com/artifact/org.springframework/spring-web -->
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-webmvc</artifactId>
    <version>4.3.3.RELEASE</version>
</dependency>


	core dependency

<!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-core</artifactId>
    <version>4.3.3.RELEASE</version>
</dependency>


-----------------------------------

create views folder inside your web-inf folder
	create jsp file LandigPage.jsp
-----------------
create java folder inside your src folder

	create package for controller
	 create controller for your landing page 


	@Controller
public class LandingController {

	@RequestMapping("/")
public ModelAndView helloWorld(){
	
	ModelAndView model=new ModelAndView("LandingPage");
	model.addObject("msg","Welcome to my page");
	return model;
}

	
}

-------------------------------------
Add bleow in your dispatcher-servlet 
	<!--it's say that scan all controller and use it -->
	<context:component-scan base-package="com.arun.pg"></context:component-scan>

----------
 clean and build your project cleat your server than Run


---------------------------------------------------------------------------------

				use the static resources


create css js images folder in your webapp folder and paste relevent files

Go to dispatcher servlet and use static resources
	<mvc:resources mapping="/resources/**" location="/resources/" />

now go to your pom.xml and add jstl dependency

<!-- https://mvnrepository.com/artifact/jstl/jstl -->
<dependency>
    <groupId>jstl</groupId>
    <artifactId>jstl</artifactId>
    <version>1.2</version>
</dependency>

now go in your jsp file 
use jstl core


	<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<html>
<head>
    <link href="<c:url value="/resources/css/cssname.css" />" rel="stylesheet">
    <title>Home</title>
</head>
<body>
    <h1>Hello world!</h1>
</body>
</html>

	------------------------------------------------

	go to your java folder than create model dao controller packages


---------------------------------------------------------------------------------------

	HibernateConfiguration 
 
	Add dependencies in pom.xml for database connection



  <!--h2 database dependency -->

<dependency>
    <groupId>com.h2database</groupId>
    <artifactId>h2</artifactId>
    <version>1.4.192</version>
</dependency>

<!--hibernate core dependency  -->  
  
<dependency>
    <groupId>org.hibernate</groupId>
    <artifactId>hibernate-core</artifactId>
    <version>5.2.3.Final</version>
</dependency>
    
  <!-- Spring ORM dependency and it's version must be same as your spring dependency -->
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-orm</artifactId>
    <version>4.3.3.RELEASE</version>
</dependency>
  

<!-- Spring Context dependency  -->
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-context</artifactId>
    <version>4.3.3.RELEASE</version>
</dependency>
-------------------------

